(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
const currency = require('currency.js');
//bundle is :  <script src = "currencyBundle2.js"></script>

//100 = 1.00, etc.
function getTotal(quantityBuying, costForEach){
    //alert("inhere");
    let total = currency(quantityBuying).multiply(currency(costForEach));
    let tax = currency(total).multiply(.05);
    //let totalFloat = currency(total);
    //let taxFloat = parseFloat(tax);
    let totalWithTax = (total).add(tax);
    //let totalWithTaxFloat = currency(totalWithTax);
    //alert(total);
    alert("function2");
    alert(totalWithTax);
    //alert(tax);
    //return((totalWithTax.format()));
}

if (typeof window !== 'undefined') {
    window.myExtFunction2 = function(quantityBuying, costForEach) {
        return getTotal(quantityBuying, costForEach);
    }
}
},{"currency.js":2}],2:[function(require,module,exports){
/*
 currency.js - v2.0.4-84456f89
 http://scurker.github.io/currency.js

 Copyright (c) 2022 Jason Wilson
 Released under MIT license
*/
(function(e,g){"object"===typeof exports&&"undefined"!==typeof module?module.exports=g():"function"===typeof define&&define.amd?define(g):(e=e||self,e.currency=g())})(this,function(){function e(b,a){if(!(this instanceof e))return new e(b,a);a=Object.assign({},m,a);var d=Math.pow(10,a.precision);this.intValue=b=g(b,a);this.value=b/d;a.increment=a.increment||1/d;a.groups=a.useVedic?n:p;this.s=a;this.p=d}function g(b,a){var d=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!0;var c=a.decimal;
var h=a.errorOnInvalid,k=a.fromCents,l=Math.pow(10,a.precision),f=b instanceof e;if(f&&k)return b.intValue;if("number"===typeof b||f)c=f?b.value:b;else if("string"===typeof b)h=new RegExp("[^-\\d"+c+"]","g"),c=new RegExp("\\"+c,"g"),c=(c=b.replace(/\((.*)\)/,"-$1").replace(h,"").replace(c,"."))||0;else{if(h)throw Error("Invalid Input");c=0}k||(c=(c*l).toFixed(4));return d?Math.round(c):c}var m={symbol:"$",separator:",",decimal:".",errorOnInvalid:!1,precision:2,pattern:"!#",negativePattern:"-!#",format:function(b,
a){var d=a.pattern,c=a.negativePattern,h=a.symbol,k=a.separator,l=a.decimal;a=a.groups;var f=(""+b).replace(/^-/,"").split("."),q=f[0];f=f[1];return(0<=b.value?d:c).replace("!",h).replace("#",q.replace(a,"$1"+k)+(f?l+f:""))},fromCents:!1},p=/(\d)(?=(\d{3})+\b)/g,n=/(\d)(?=(\d\d)+\d\b)/g;e.prototype={add:function(b){var a=this.s,d=this.p;return e((this.intValue+g(b,a))/(a.fromCents?1:d),a)},subtract:function(b){var a=this.s,d=this.p;return e((this.intValue-g(b,a))/(a.fromCents?1:d),a)},multiply:function(b){var a=
this.s;return e(this.intValue*b/(a.fromCents?1:Math.pow(10,a.precision)),a)},divide:function(b){var a=this.s;return e(this.intValue/g(b,a,!1),a)},distribute:function(b){var a=this.intValue,d=this.p,c=this.s,h=[],k=Math[0<=a?"floor":"ceil"](a/b),l=Math.abs(a-k*b);for(d=c.fromCents?1:d;0!==b;b--){var f=e(k/d,c);0<l--&&(f=f[0<=a?"add":"subtract"](1/d));h.push(f)}return h},dollars:function(){return~~this.value},cents:function(){return~~(this.intValue%this.p)},format:function(b){var a=this.s;return"function"===
typeof b?b(this,a):a.format(this,Object.assign({},a,b))},toString:function(){var b=this.s,a=b.increment;return(Math.round(this.intValue/this.p/a)*a).toFixed(b.precision)},toJSON:function(){return this.value}};return e});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL1VzZXJzL2pvc2h1L0FwcERhdGEvUm9hbWluZy9ucG0vbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsImN1cnJlbmN5U2Vjb25kVG9CdW5kbGUuanMiLCJub2RlX21vZHVsZXMvY3VycmVuY3kuanMvZGlzdC9jdXJyZW5jeS5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDdkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiY29uc3QgY3VycmVuY3kgPSByZXF1aXJlKCdjdXJyZW5jeS5qcycpO1xyXG4vL2J1bmRsZSBpcyA6ICA8c2NyaXB0IHNyYyA9IFwiY3VycmVuY3lCdW5kbGUyLmpzXCI+PC9zY3JpcHQ+XHJcblxyXG4vLzEwMCA9IDEuMDAsIGV0Yy5cclxuZnVuY3Rpb24gZ2V0VG90YWwocXVhbnRpdHlCdXlpbmcsIGNvc3RGb3JFYWNoKXtcclxuICAgIC8vYWxlcnQoXCJpbmhlcmVcIik7XHJcbiAgICBsZXQgdG90YWwgPSBjdXJyZW5jeShxdWFudGl0eUJ1eWluZykubXVsdGlwbHkoY3VycmVuY3koY29zdEZvckVhY2gpKTtcclxuICAgIGxldCB0YXggPSBjdXJyZW5jeSh0b3RhbCkubXVsdGlwbHkoLjA1KTtcclxuICAgIC8vbGV0IHRvdGFsRmxvYXQgPSBjdXJyZW5jeSh0b3RhbCk7XHJcbiAgICAvL2xldCB0YXhGbG9hdCA9IHBhcnNlRmxvYXQodGF4KTtcclxuICAgIGxldCB0b3RhbFdpdGhUYXggPSAodG90YWwpLmFkZCh0YXgpO1xyXG4gICAgLy9sZXQgdG90YWxXaXRoVGF4RmxvYXQgPSBjdXJyZW5jeSh0b3RhbFdpdGhUYXgpO1xyXG4gICAgLy9hbGVydCh0b3RhbCk7XHJcbiAgICBhbGVydChcImZ1bmN0aW9uMlwiKTtcclxuICAgIGFsZXJ0KHRvdGFsV2l0aFRheCk7XHJcbiAgICAvL2FsZXJ0KHRheCk7XHJcbiAgICAvL3JldHVybigodG90YWxXaXRoVGF4LmZvcm1hdCgpKSk7XHJcbn1cclxuXHJcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgd2luZG93Lm15RXh0RnVuY3Rpb24yID0gZnVuY3Rpb24ocXVhbnRpdHlCdXlpbmcsIGNvc3RGb3JFYWNoKSB7XHJcbiAgICAgICAgcmV0dXJuIGdldFRvdGFsKHF1YW50aXR5QnV5aW5nLCBjb3N0Rm9yRWFjaCk7XHJcbiAgICB9XHJcbn0iLCIvKlxuIGN1cnJlbmN5LmpzIC0gdjIuMC40LTg0NDU2Zjg5XG4gaHR0cDovL3NjdXJrZXIuZ2l0aHViLmlvL2N1cnJlbmN5LmpzXG5cbiBDb3B5cmlnaHQgKGMpIDIwMjIgSmFzb24gV2lsc29uXG4gUmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2VcbiovXG4oZnVuY3Rpb24oZSxnKXtcIm9iamVjdFwiPT09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWcoKTpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShnKTooZT1lfHxzZWxmLGUuY3VycmVuY3k9ZygpKX0pKHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGIsYSl7aWYoISh0aGlzIGluc3RhbmNlb2YgZSkpcmV0dXJuIG5ldyBlKGIsYSk7YT1PYmplY3QuYXNzaWduKHt9LG0sYSk7dmFyIGQ9TWF0aC5wb3coMTAsYS5wcmVjaXNpb24pO3RoaXMuaW50VmFsdWU9Yj1nKGIsYSk7dGhpcy52YWx1ZT1iL2Q7YS5pbmNyZW1lbnQ9YS5pbmNyZW1lbnR8fDEvZDthLmdyb3Vwcz1hLnVzZVZlZGljP246cDt0aGlzLnM9YTt0aGlzLnA9ZH1mdW5jdGlvbiBnKGIsYSl7dmFyIGQ9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOiEwO3ZhciBjPWEuZGVjaW1hbDtcbnZhciBoPWEuZXJyb3JPbkludmFsaWQsaz1hLmZyb21DZW50cyxsPU1hdGgucG93KDEwLGEucHJlY2lzaW9uKSxmPWIgaW5zdGFuY2VvZiBlO2lmKGYmJmspcmV0dXJuIGIuaW50VmFsdWU7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBifHxmKWM9Zj9iLnZhbHVlOmI7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGIpaD1uZXcgUmVnRXhwKFwiW14tXFxcXGRcIitjK1wiXVwiLFwiZ1wiKSxjPW5ldyBSZWdFeHAoXCJcXFxcXCIrYyxcImdcIiksYz0oYz1iLnJlcGxhY2UoL1xcKCguKilcXCkvLFwiLSQxXCIpLnJlcGxhY2UoaCxcIlwiKS5yZXBsYWNlKGMsXCIuXCIpKXx8MDtlbHNle2lmKGgpdGhyb3cgRXJyb3IoXCJJbnZhbGlkIElucHV0XCIpO2M9MH1rfHwoYz0oYypsKS50b0ZpeGVkKDQpKTtyZXR1cm4gZD9NYXRoLnJvdW5kKGMpOmN9dmFyIG09e3N5bWJvbDpcIiRcIixzZXBhcmF0b3I6XCIsXCIsZGVjaW1hbDpcIi5cIixlcnJvck9uSW52YWxpZDohMSxwcmVjaXNpb246MixwYXR0ZXJuOlwiISNcIixuZWdhdGl2ZVBhdHRlcm46XCItISNcIixmb3JtYXQ6ZnVuY3Rpb24oYixcbmEpe3ZhciBkPWEucGF0dGVybixjPWEubmVnYXRpdmVQYXR0ZXJuLGg9YS5zeW1ib2wsaz1hLnNlcGFyYXRvcixsPWEuZGVjaW1hbDthPWEuZ3JvdXBzO3ZhciBmPShcIlwiK2IpLnJlcGxhY2UoL14tLyxcIlwiKS5zcGxpdChcIi5cIikscT1mWzBdO2Y9ZlsxXTtyZXR1cm4oMDw9Yi52YWx1ZT9kOmMpLnJlcGxhY2UoXCIhXCIsaCkucmVwbGFjZShcIiNcIixxLnJlcGxhY2UoYSxcIiQxXCIraykrKGY/bCtmOlwiXCIpKX0sZnJvbUNlbnRzOiExfSxwPS8oXFxkKSg/PShcXGR7M30pK1xcYikvZyxuPS8oXFxkKSg/PShcXGRcXGQpK1xcZFxcYikvZztlLnByb3RvdHlwZT17YWRkOmZ1bmN0aW9uKGIpe3ZhciBhPXRoaXMucyxkPXRoaXMucDtyZXR1cm4gZSgodGhpcy5pbnRWYWx1ZStnKGIsYSkpLyhhLmZyb21DZW50cz8xOmQpLGEpfSxzdWJ0cmFjdDpmdW5jdGlvbihiKXt2YXIgYT10aGlzLnMsZD10aGlzLnA7cmV0dXJuIGUoKHRoaXMuaW50VmFsdWUtZyhiLGEpKS8oYS5mcm9tQ2VudHM/MTpkKSxhKX0sbXVsdGlwbHk6ZnVuY3Rpb24oYil7dmFyIGE9XG50aGlzLnM7cmV0dXJuIGUodGhpcy5pbnRWYWx1ZSpiLyhhLmZyb21DZW50cz8xOk1hdGgucG93KDEwLGEucHJlY2lzaW9uKSksYSl9LGRpdmlkZTpmdW5jdGlvbihiKXt2YXIgYT10aGlzLnM7cmV0dXJuIGUodGhpcy5pbnRWYWx1ZS9nKGIsYSwhMSksYSl9LGRpc3RyaWJ1dGU6ZnVuY3Rpb24oYil7dmFyIGE9dGhpcy5pbnRWYWx1ZSxkPXRoaXMucCxjPXRoaXMucyxoPVtdLGs9TWF0aFswPD1hP1wiZmxvb3JcIjpcImNlaWxcIl0oYS9iKSxsPU1hdGguYWJzKGEtaypiKTtmb3IoZD1jLmZyb21DZW50cz8xOmQ7MCE9PWI7Yi0tKXt2YXIgZj1lKGsvZCxjKTswPGwtLSYmKGY9ZlswPD1hP1wiYWRkXCI6XCJzdWJ0cmFjdFwiXSgxL2QpKTtoLnB1c2goZil9cmV0dXJuIGh9LGRvbGxhcnM6ZnVuY3Rpb24oKXtyZXR1cm5+fnRoaXMudmFsdWV9LGNlbnRzOmZ1bmN0aW9uKCl7cmV0dXJufn4odGhpcy5pbnRWYWx1ZSV0aGlzLnApfSxmb3JtYXQ6ZnVuY3Rpb24oYil7dmFyIGE9dGhpcy5zO3JldHVyblwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGI/Yih0aGlzLGEpOmEuZm9ybWF0KHRoaXMsT2JqZWN0LmFzc2lnbih7fSxhLGIpKX0sdG9TdHJpbmc6ZnVuY3Rpb24oKXt2YXIgYj10aGlzLnMsYT1iLmluY3JlbWVudDtyZXR1cm4oTWF0aC5yb3VuZCh0aGlzLmludFZhbHVlL3RoaXMucC9hKSphKS50b0ZpeGVkKGIucHJlY2lzaW9uKX0sdG9KU09OOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWV9fTtyZXR1cm4gZX0pO1xuIl19
